# -*- coding: utf-8 -*-

# ---------------------------------------------- 
#   методы и классы общего назначения
# ---------------------------------------------- 

def safeDget(d, key, a_def):
  """ ф-ия возвращает значение ключа из словаря d или
           значение a_def при отсутсвии ключа в словаре """
  try:
    res = d[key]
  except:
    res = a_def
    # TODO логирование 
  return res 


def renameDK(srcd, keyd, convf = None):
  """ ф-ия возвращает словарь, полученный из словаря srcd путем переименования ключей
      по словарю keyd (key - старое значение ключа; value - новое значение ключа) 
      convf - ф-ия для преобразования значений при переносе (например: lambda v: int(v))   
      Замечание: если в srcd встречается ключ, отсутствующий в keyd - то в выходной
                 словарь этот ключ;значение НЕ ПЕРЕНОСИТСЯ   
     """ 
  res = {}

  for k,v in srcd.items():
    if k in keyd:  
      if convf:  res[keyd[k]] = convf(v)
      else:      res[keyd[k]] = v 

  return res


def  smartShow(win, *args, **kw):
  """ вывод окна win (потомок QWidget) c учетом свернутого\скрытого состояний
      и передачей параметров в перегруженный метод show """
  win.hide()       # без hide не всплывет на первый план если УЖЕ открыто но перекрыто другими окнами
  win.showNormal() # отмена сворачивания, максимального и полноэкранного режимов 
  win.show(*args, **kw)  # передача параметров в перегруженный метод
  #win.show()

# Флаг версии для ПК
PCFlag=2